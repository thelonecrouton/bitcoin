#!/bin/bash
<<<<<<< HEAD:qa/pull-tester/run-bitcoind-for-test.sh.in
# Copyright (c) 2013-2014 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
#
DATADIR="@abs_top_builddir@/.dash"
=======
# Copyright (c) 2013 The Crowncoin developers
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
#
DATADIR="@abs_top_builddir@/.crowncoin"
>>>>>>> origin/dirty-merge-dash-0.11.0:qa/pull-tester/run-crowncoind-for-test.sh.in
rm -rf "$DATADIR"
mkdir -p "$DATADIR"/regtest
touch "$DATADIR/regtest/debug.log"
tail -q -n 1 -F "$DATADIR/regtest/debug.log" | grep -m 1 -q "Done loading" &
WAITER=$!
<<<<<<< HEAD:qa/pull-tester/run-bitcoind-for-test.sh.in
PORT=`expr 10000 + $$ % 55536`
"@abs_top_builddir@/src/dashd@EXEEXT@" -connect=0.0.0.0 -datadir="$DATADIR" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -checkmempool=0 -relaypriority=0 -port=$PORT -whitelist=127.0.0.1 -regtest -rpcport=`expr $PORT + 1` &
BITCOIND=$!
=======
PORT=`expr $BASHPID + 10000`
"@abs_top_builddir@/src/crowncoind@EXEEXT@" -connect=0.0.0.0 -datadir="$DATADIR" -rpcuser=user -rpcpassword=pass -listen -keypool=3 -debug -debug=net -logtimestamps -port=$PORT -regtest -rpcport=`expr $PORT + 1` &
CROWNCOIND=$!
>>>>>>> origin/dirty-merge-dash-0.11.0:qa/pull-tester/run-crowncoind-for-test.sh.in

#Install a watchdog.
(sleep 10 && kill -0 $WAITER 2>/dev/null && kill -9 $CROWNCOIND $$)&
wait $WAITER

if [ -n "$TIMEOUT" ]; then
  timeout "$TIMEOUT"s "$@" $PORT
  RETURN=$?
else
  "$@" $PORT
  RETURN=$?
fi

(sleep 15 && kill -0 $CROWNCOIND 2>/dev/null && kill -9 $CROWNCOIND $$)&
kill $CROWNCOIND && wait $CROWNCOIND

# timeout returns 124 on timeout, otherwise the return value of the child

# If $RETURN is not 0, the test failed. Dump the tail of the debug log.
if [ $RETURN -ne 0 ]; then tail -n 200 $DATADIR/regtest/debug.log; fi

exit $RETURN
